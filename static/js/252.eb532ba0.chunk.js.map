{"version":3,"file":"static/js/252.eb532ba0.chunk.js","mappings":"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","sources":["pages/contactView.styled.js","redux/Contacts/selectors.js","components/ContactForm/ContactForm.styled.js","../node_modules/nanoid/index.browser.js","components/ContactForm/ContactForm.js","components/ContactItem/ContactItem.styled.js","components/ContactItem/ContactItem.js","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","pages/contactsView.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const H1 = styled.h1`\n    text-align: center;\n`;\n\nexport const H2 = styled.h2`\n    text-align: center;\n`;\n\n","export const getContacts = state => state.contacts.items;\nexport const getIsLoading = state => state.contacts.isLoading;\nexport const getError = state => state.contacts.error;\nexport const getFilter = state => state.filter.value;\n\n\n\n\n","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n    padding: 15px;\n    width: 300px;\n    margin: 0 auto;\n    display: flex;\n    flex-direction: column;\n    gap: 15px;\n    border: 1px solid black;\n`\n\nexport const Input = styled.input`\n    width: 285px;\n    justify-content: center;\n    :hover {\n    border-color: lightgrey;\n`\n\nexport const Button = styled.button`\n    width: 130px;\n    height: 30px;\n    text-align: center;\n    justify-content: center;\n    background-color: lightgrey;\n    border-radius: 5px;\n    border: none;\n    cursor: pointer;\n    margin-right: auto;\n    margin-left: auto;\n    :hover {\n    background-color: dodgerblue;\n    border: none;\n}`","import { urlAlphabet } from './url-alphabet/index.js'\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nlet customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nlet customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nlet nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n  while (size--) {\n    let byte = bytes[size] & 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte < 63) {\n      id += '_'\n    } else {\n      id += '-'\n    }\n  }\n  return id\n}\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n","import { Form, Input, Button } from './ContactForm.styled';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/Contacts/operations';\nimport { getContacts } from 'redux/Contacts/selectors';\nimport { nanoid } from \"nanoid\";\n\nexport const ContactForm = () => {\n\n    const [name, setName] = useState('');\n    const [number, setNumber] = useState('');\n\n    const contacts = useSelector(getContacts);\n    const dispatch = useDispatch();\n\n\nconst onChange = e => {\n    const {name, value} = e.currentTarget;\n\n    switch (name) {\n        case 'name': \n            setName(value);\n            break;\n\n        case 'number':\n            setNumber(value);\n            break;\n\n        default:\n            return;\n        }   \n    } \n\n\n    const formSubmit = e => {\n        e.preventDefault();\n        contacts.some(contact => contact.name === name)\n            ? alert(`${name} is already in contacts.`)\n            : dispatch(addContact({\n                name,\n                number,\n                id: nanoid(),\n            })\n            )\n        setName('');\n        setNumber('');\n        };\n\n    return (\n        <>\n            <Form onSubmit={formSubmit}> \n                <label htmlFor=\"name\">Name</label>\n                    <Input\n                        type=\"text\"\n                        name=\"name\"\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                        required\n                        onChange={onChange}\n                        value={name}\n                    />\n                <label htmlFor=\"number\">Number</label>\n                    <Input\n                        type=\"tel\"\n                        name=\"number\"\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                        required\n                        onChange={onChange}\n                        value={number}\n                        />\n                <Button type=\"submit\">Add contact</Button>\n            </Form>\n        </>\n    )\n}\n","import styled from '@emotion/styled';\n\nexport const Li = styled.li`\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: space-around;\n  gap: 10px;\n`;\n\nexport const ButtonDel = styled.button`\n  margin-left: 15px;\n  border-radius: 5px;\n  border: none;\n  background-color: lightgrey;\n  :hover {\n    background-color: dodgerblue;\n    border: none;\n  }\n`;","import { ButtonDel } from './ContactItem.styled';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/Contacts/operations';\n\nexport const ContactItem = ({id, name, number }) => {\n\n    const dispatch = useDispatch();\n\n    return (\n        <li>\n            {name} : {number}\n            <ButtonDel \n                type=\"button\"\n                onClick={() => {dispatch(deleteContact(id))}}>\n                    Delete Contact\n            </ButtonDel>\n        </li>\n    )\n}\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  padding: 15px;\n  width: 400px;\n  margin: 0 auto;\n  display: flex;\n  flex-direction: column;\n  flex-wrap: nowrap;\n  gap: 15px;\n  padding-left: 120px;\n`;\n\nexport const P = styled.p`\n  text-align: center;\n  display: block;\n`;","import { ContactItem } from 'components/ContactItem/ContactItem';\nimport { List, P } from './ContactList.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from 'redux/Contacts/operations';\nimport { getContacts, getFilter } from 'redux/Contacts/selectors';\n\n\n\nconst getfilteredContacts = (contacts, filter) => {\n    if (!filter) {return contacts;}\n    else {\n        return contacts.filter(contact =>\n            contact.name.toLowerCase().includes(filter.toLowerCase()))\n    }\n}\n\n\nexport const ContactList = () => {\n\n    const dispatch = useDispatch();\n\n\n    const contacts = useSelector(getContacts);\n    const filter = useSelector(getFilter);\n    const filteredContacts = getfilteredContacts(contacts, filter);\n\n\n    \n\n    return (\n        <>\n            {filteredContacts.length <= 0 \n            ? (<P>No contacts in Phonebook</P>) \n            : (<List>\n                    {filteredContacts.map(({ id, name, number }) => {\n                        return (\n                        <ContactItem\n                            key={id}\n                            id={id}\n                            name={name}\n                            number={number}\n                            onClick={() => dispatch(deleteContact(id))}\n                        />\n                        );\n                    })}\n                </List>)}\n        </>\n    )\n}\n\n","import styled from '@emotion/styled';\n\nexport const Card = styled.div`\n  padding: 10px;\n  width: 300px;\n  margin: 0 auto;\n  display: flex;\n  flex-direction: column;\n  flex-wrap: nowrap;\n  gap: 15px;\n`;","// import PropTypes from 'prop-types';\nimport { Card } from './Filter.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getFilter } from 'redux/Contacts/selectors';\nimport { setFilter } from 'redux/Contacts/filterSlice';\n\n\nexport const Filter = () => {\n\n    const dispatch = useDispatch();\n    const filter = useSelector(getFilter);\n\n    return (\n        <Card>\n            <label htmlFor=\"filter\">Find contacts by name</label>\n            <input\n                type=\"text\"\n                value={filter}\n                onChange={(e) => {\n                    dispatch(setFilter(e.currentTarget.value))}}/>\n        </Card>\n    )\n}\n\n\n// Filter.propTypes = {\n//     filterContacts: PropTypes.func,\n// }","import { H1, H2 } from \"./contactView.styled\";\nimport { getIsLoading, getError } from \"redux/Contacts/selectors\";\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ContactForm } from \"components/ContactForm/ContactForm\";\nimport { ContactList } from \"components/ContactList/ContactList\";\nimport { Filter } from \"components/Filter/Filter\";\nimport { fetchContacts } from \"redux/Contacts/operations\";\nimport { Helmet } from 'react-helmet';\n\n\nexport default function ContactsView() {\n\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getIsLoading);\n  const error = useSelector(getError);\n\n useEffect(() => {dispatch(fetchContacts())}, [dispatch]);\n\n return (\n        <>\n            <Helmet>\n                <title>Your phonebook</title>\n            </Helmet>\n            <div>\n                <H1>Phonebook</H1>\n                <ContactForm />\n                <div>{isLoading && !error && 'Reguest in progress...'}</div>\n                <H2>Contacts</H2>\n                <Filter />\n                <ContactList />\n                \n            </div>\n        </>\n ) \n}"],"names":["H1","styled","H2","getContacts","state","contacts","items","getIsLoading","isLoading","getError","error","getFilter","filter","value","Form","Input","Button","nanoid","size","id","bytes","crypto","getRandomValues","Uint8Array","byte","toString","toUpperCase","ContactForm","useState","name","setName","number","setNumber","useSelector","dispatch","useDispatch","onChange","e","currentTarget","onSubmit","preventDefault","some","contact","alert","addContact","htmlFor","type","pattern","title","required","ButtonDel","ContactItem","onClick","deleteContact","List","P","ContactList","filteredContacts","toLowerCase","includes","getfilteredContacts","length","map","Card","Filter","setFilter","ContactsView","useEffect","fetchContacts","Helmet"],"sourceRoot":""}